esphome:
  name: powermeter
  friendly_name: PowerMeter
  min_version: 2025.9.3
  build_path: build/powermeter

  # Публикуем восстановленные значения template-сенсоров при старте
  on_boot:
    then:
      - sensor.template.publish:
          id: ch1_t1_day
          state: !lambda 'return id(tariff_values)[0];'
      - sensor.template.publish:
          id: ch1_t2_night
          state: !lambda 'return id(tariff_values)[1];'
      - sensor.template.publish:
          id: ch1_t3_peak
          state: !lambda 'return id(tariff_values)[2];'
      - sensor.template.publish:
          id: ch1_t4_halfpeak
          state: !lambda 'return id(tariff_values)[3];'

      - sensor.template.publish:
          id: ch2_t1_day
          state: !lambda 'return id(tariff_values)[4];'
      - sensor.template.publish:
          id: ch2_t2_night
          state: !lambda 'return id(tariff_values)[5];'
      - sensor.template.publish:
          id: ch2_t3_peak
          state: !lambda 'return id(tariff_values)[6];'
      - sensor.template.publish:
          id: ch2_t4_halfpeak
          state: !lambda 'return id(tariff_values)[7];'

      - sensor.template.publish:
          id: ch3_t1_day
          state: !lambda 'return id(tariff_values)[8];'
      - sensor.template.publish:
          id: ch3_t2_night
          state: !lambda 'return id(tariff_values)[9];'
      - sensor.template.publish:
          id: ch3_t3_peak
          state: !lambda 'return id(tariff_values)[10];'
      - sensor.template.publish:
          id: ch3_t4_halfpeak
          state: !lambda 'return id(tariff_values)[11];'

      - sensor.template.publish:
          id: ch4_t1_day
          state: !lambda 'return id(tariff_values)[12];'
      - sensor.template.publish:
          id: ch4_t2_night
          state: !lambda 'return id(tariff_values)[13];'
      - sensor.template.publish:
          id: ch4_t3_peak
          state: !lambda 'return id(tariff_values)[14];'
      - sensor.template.publish:
          id: ch4_t4_halfpeak
          state: !lambda 'return id(tariff_values)[15];'

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf

logger:

api:
  encryption:
    key: "qR1XsNfsN0jWFWrYvXOurnNw4UgebgLwjoOtmn+TOWY4=R"

ota:
  - platform: esphome
    password: "400e0e3a0d78a960d95622d6aa06037a"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

captive_portal:

# ===================================================================
# Время
# ===================================================================
time:
  - platform: homeassistant
    id: esptime

# ===================================================================
# UART / Modbus
# ===================================================================
uart:
  - id: uart_modbus
    tx_pin: 17
    rx_pin: 18
    baud_rate: 9600
    parity: NONE
    stop_bits: 2
    data_bits: 8

modbus:
  - uart_id: uart_modbus
    id: modbus_bus

modbus_controller:
  - id: map_device
    modbus_id: modbus_bus
    address: 0x91
    update_interval: 5s

# ===================================================================
# СЕНСОРЫ: Modbus + template (ЧИСЛОВЫЕ)
# ===================================================================
sensor:
  # --- Template sensors (тарифы, восстановление через globals) ---
  - platform: template
    name: "Channel 1 T1 (День)"
    id: ch1_t1_day
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 1 T2 (Ночь)"
    id: ch1_t2_night
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 1 T3 (Пик)"
    id: ch1_t3_peak
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 1 T4 (Полупик)"
    id: ch1_t4_halfpeak
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 2 T1 (День)"
    id: ch2_t1_day
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 2 T2 (Ночь)"
    id: ch2_t2_night
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 2 T3 (Пик)"
    id: ch2_t3_peak
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 2 T4 (Полупик)"
    id: ch2_t4_halfpeak
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 3 T1 (День)"
    id: ch3_t1_day
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 3 T2 (Ночь)"
    id: ch3_t2_night
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 3 T3 (Пик)"
    id: ch3_t3_peak
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 3 T4 (Полупик)"
    id: ch3_t4_halfpeak
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 4 T1 (День)"
    id: ch4_t1_day
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 4 T2 (Ночь)"
    id: ch4_t2_night
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 4 T3 (Пик)"
    id: ch4_t3_peak
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  - platform: template
    name: "Channel 4 T4 (Полупик)"
    id: ch4_t4_halfpeak
    unit_of_measurement: "кВт·ч"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 3

  # --- Global voltages / frequency ---
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "MAP12E Urms L1"
    register_type: read
    address: 0x1410
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "MAP12E Urms L2"
    register_type: read
    address: 0x1412
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "MAP12E Urms L3"
    register_type: read
    address: 0x1414
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "MAP12E Frequency"
    register_type: read
    address: 0x10F8
    value_type: U_WORD
    unit_of_measurement: "Hz"
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  # ---------------------------
  # Channel 1 (3-phase) sensors
  # ---------------------------
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 Total Active Power"
    register_type: read
    address: 0x1300
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    id: ch1_total_energy
    name: "Ch1 Total AP Energy"
    address: 0x1210
    register_type: read
    value_type: U_QWORD_R
    unit_of_measurement: "kWh"
    accuracy_decimals: 4
    filters:
      - multiply: 0.00001
    on_value:
      then:
        - lambda: |-
            id(process_energy_update).execute(0, x);

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 L1 Irms"
    register_type: read
    address: 0x1416
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 L1 Active Power"
    register_type: read
    address: 0x1302
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 PF L1"
    register_type: read
    address: 0x10BD
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 L2 Irms"
    register_type: read
    address: 0x1418
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 L2 Active Power"
    register_type: read
    address: 0x1304
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 PF L2"
    register_type: read
    address: 0x10BE
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 L3 Irms"
    register_type: read
    address: 0x141A
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 L3 Active Power"
    register_type: read
    address: 0x1306
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 PF L3"
    register_type: read
    address: 0x10BF
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # ---------------------------
  # Channel 2 (3-phase) sensors
  # ---------------------------
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 Total Active Power"
    register_type: read
    address: 0x2300
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    id: ch2_total_energy
    name: "Ch2 Total AP Energy"
    address: 0x2200
    register_type: read
    value_type: U_QWORD_R
    unit_of_measurement: "kWh"
    accuracy_decimals: 4
    filters:
      - multiply: 0.00001
    on_value:
      then:
        - lambda: |-
            id(process_energy_update).execute(1, x);

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 L1 Irms"
    register_type: read
    address: 0x2416
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 L1 Active Power"
    register_type: read
    address: 0x2302
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 PF L1"
    register_type: read
    address: 0x20BD
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 L2 Irms"
    register_type: read
    address: 0x2418
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 L2 Active Power"
    register_type: read
    address: 0x2304
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 PF L2"
    register_type: read
    address: 0x20BE
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 L3 Irms"
    register_type: read
    address: 0x241A
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 L3 Active Power"
    register_type: read
    address: 0x2306
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 PF L3"
    register_type: read
    address: 0x20BF
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # ---------------------------
  # Channel 3 (3-phase) sensors
  # ---------------------------
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 Total Active Power"
    register_type: read
    address: 0x3300
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    id: ch3_total_energy
    name: "Ch3 Total AP Energy"
    address: 0x3200
    register_type: read
    value_type: U_QWORD_R
    unit_of_measurement: "kWh"
    accuracy_decimals: 4
    filters:
      - multiply: 0.00001
    on_value:
      then:
        - lambda: |-
            id(process_energy_update).execute(2, x);

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 L1 Irms"
    register_type: read
    address: 0x3416
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 L1 Active Power"
    register_type: read
    address: 0x3302
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 PF L1"
    register_type: read
    address: 0x30BD
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 L2 Irms"
    register_type: read
    address: 0x3418
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 L2 Active Power"
    register_type: read
    address: 0x3304
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 PF L2"
    register_type: read
    address: 0x30BE
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 L3 Irms"
    register_type: read
    address: 0x341A
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 L3 Active Power"
    register_type: read
    address: 0x3306
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 PF L3"
    register_type: read
    address: 0x30BF
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # ---------------------------
  # Channel 4 (3-phase) sensors
  # ---------------------------
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 Total Active Power"
    register_type: read
    address: 0x4300
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    id: ch4_total_energy
    name: "Ch4 Total AP Energy"
    address: 0x4200
    register_type: read
    value_type: U_QWORD_R
    unit_of_measurement: "kWh"
    accuracy_decimals: 4
    filters:
      - multiply: 0.00001
    on_value:
      then:
        - lambda: |-
            id(process_energy_update).execute(3, x);

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 L1 Irms"
    register_type: read
    address: 0x4416
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 L1 Active Power"
    register_type: read
    address: 0x4302
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 PF L1"
    register_type: read
    address: 0x40BD
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 L2 Irms"
    register_type: read
    address: 0x4418
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 L2 Active Power"
    register_type: read
    address: 0x4304
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 PF L2"
    register_type: read
    address: 0x40BE
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 L3 Irms"
    register_type: read
    address: 0x441A
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 3
    filters:
      - multiply: 0.016

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 L3 Active Power"
    register_type: read
    address: 0x4306
    value_type: S_DWORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
      - multiply: 0.00512

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 PF L3"
    register_type: read
    address: 0x40BF
    value_type: S_WORD
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # --- Optional: Firmware version (для диагностики) ---
  - platform: modbus_controller
    modbus_controller_id: map_device
    id: device_fw_major
    name: "WB-MAP12E FW MAJOR"
    address: 320         
    register_type: read
    value_type: U_WORD
    unit_of_measurement: ""

  # --- ДОБАВЛЕНО: Uptime (Input u32) ---
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "MAP12E Uptime"
    register_type: read
    address: 0x0068
    value_type: U_DWORD
    unit_of_measurement: "s"
    accuracy_decimals: 0

  # --- ДОБАВЛЕНО: ЧТЕНИЕ текущих параметров CT (для каждого канала) ---
  # Channel 1 read (coefficients, delays, phase selects, invert status)
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT Ratio L1 (raw)"
    id: ch1_ct_ratio_l1_raw
    register_type: holding
    address: 0x1460
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT Ratio L1"
    id: ch1_ct_ratio_l1
    register_type: holding
    address: 0x1460
    value_type: U_WORD
    unit_of_measurement: ""
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT Ratio L2"
    id: ch1_ct_ratio_l2
    register_type: holding
    address: 0x1461
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT Ratio L3"
    id: ch1_ct_ratio_l3
    register_type: holding
    address: 0x1462
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT Phase Delay L1 (raw)"
    id: ch1_phase_delay_l1_raw
    register_type: holding
    address: 0x1463
    value_type: S_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT Phase Delay L1 (deg)"
    id: ch1_phase_delay_l1
    register_type: holding
    address: 0x1463
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT Phase Delay L2 (deg)"
    id: ch1_phase_delay_l2
    register_type: holding
    address: 0x1464
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT Phase Delay L3 (deg)"
    id: ch1_phase_delay_l3
    register_type: holding
    address: 0x1465
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT1 Phase Select"
    id: ch1_ct1_phase
    register_type: holding
    address: 0x14A0
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT2 Phase Select"
    id: ch1_ct2_phase
    register_type: holding
    address: 0x14A1
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT3 Phase Select"
    id: ch1_ct3_phase
    register_type: holding
    address: 0x14A2
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT L1 Invert (status)"
    id: ch1_ct_l1_invert_status
    register_type: holding
    address: 0x14B0
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT L2 Invert (status)"
    id: ch1_ct_l2_invert_status
    register_type: holding
    address: 0x14B1
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT L3 Invert (status)"
    id: ch1_ct_l3_invert_status
    register_type: holding
    address: 0x14B2
    value_type: U_WORD
    accuracy_decimals: 0

  # Channel 2 read parameters
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT Ratio L1"
    id: ch2_ct_ratio_l1
    register_type: holding
    address: 0x2460
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT Ratio L2"
    id: ch2_ct_ratio_l2
    register_type: holding
    address: 0x2461
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT Ratio L3"
    id: ch2_ct_ratio_l3
    register_type: holding
    address: 0x2462
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT Phase Delay L1 (deg)"
    id: ch2_phase_delay_l1
    register_type: holding
    address: 0x2463
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT Phase Delay L2 (deg)"
    id: ch2_phase_delay_l2
    register_type: holding
    address: 0x2464
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT Phase Delay L3 (deg)"
    id: ch2_phase_delay_l3
    register_type: holding
    address: 0x2465
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT1 Phase Select"
    id: ch2_ct1_phase
    register_type: holding
    address: 0x24A0
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT2 Phase Select"
    id: ch2_ct2_phase
    register_type: holding
    address: 0x24A1
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT3 Phase Select"
    id: ch2_ct3_phase
    register_type: holding
    address: 0x24A2
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT L1 Invert (status)"
    id: ch2_ct_l1_invert_status
    register_type: holding
    address: 0x24B0
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT L2 Invert (status)"
    id: ch2_ct_l2_invert_status
    register_type: holding
    address: 0x24B1
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT L3 Invert (status)"
    id: ch2_ct_l3_invert_status
    register_type: holding
    address: 0x24B2
    value_type: U_WORD
    accuracy_decimals: 0

  # Channel 3 read parameters
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT Ratio L1"
    id: ch3_ct_ratio_l1
    register_type: holding
    address: 0x3460
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT Ratio L2"
    id: ch3_ct_ratio_l2
    register_type: holding
    address: 0x3461
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT Ratio L3"
    id: ch3_ct_ratio_l3
    register_type: holding
    address: 0x3462
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT Phase Delay L1 (deg)"
    id: ch3_phase_delay_l1
    register_type: holding
    address: 0x3463
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT Phase Delay L2 (deg)"
    id: ch3_phase_delay_l2
    register_type: holding
    address: 0x3464
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT Phase Delay L3 (deg)"
    id: ch3_phase_delay_l3
    register_type: holding
    address: 0x3465
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT1 Phase Select"
    id: ch3_ct1_phase
    register_type: holding
    address: 0x34A0
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT2 Phase Select"
    id: ch3_ct2_phase
    register_type: holding
    address: 0x34A1
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT3 Phase Select"
    id: ch3_ct3_phase
    register_type: holding
    address: 0x34A2
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT L1 Invert (status)"
    id: ch3_ct_l1_invert_status
    register_type: holding
    address: 0x34B0
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT L2 Invert (status)"
    id: ch3_ct_l2_invert_status
    register_type: holding
    address: 0x34B1
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT L3 Invert (status)"
    id: ch3_ct_l3_invert_status
    register_type: holding
    address: 0x34B2
    value_type: U_WORD
    accuracy_decimals: 0

  # Channel 4 read parameters
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT Ratio L1"
    id: ch4_ct_ratio_l1
    register_type: holding
    address: 0x4460
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT Ratio L2"
    id: ch4_ct_ratio_l2
    register_type: holding
    address: 0x4461
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT Ratio L3"
    id: ch4_ct_ratio_l3
    register_type: holding
    address: 0x4462
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT Phase Delay L1 (deg)"
    id: ch4_phase_delay_l1
    register_type: holding
    address: 0x4463
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT Phase Delay L2 (deg)"
    id: ch4_phase_delay_l2
    register_type: holding
    address: 0x4464
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT Phase Delay L3 (deg)"
    id: ch4_phase_delay_l3
    register_type: holding
    address: 0x4465
    value_type: S_WORD
    unit_of_measurement: "°"
    accuracy_decimals: 4
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT1 Phase Select"
    id: ch4_ct1_phase
    register_type: holding
    address: 0x44A0
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT2 Phase Select"
    id: ch4_ct2_phase
    register_type: holding
    address: 0x44A1
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT3 Phase Select"
    id: ch4_ct3_phase
    register_type: holding
    address: 0x44A2
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT L1 Invert (status)"
    id: ch4_ct_l1_invert_status
    register_type: holding
    address: 0x44B0
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT L2 Invert (status)"
    id: ch4_ct_l2_invert_status
    register_type: holding
    address: 0x44B1
    value_type: U_WORD
    accuracy_decimals: 0

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT L3 Invert (status)"
    id: ch4_ct_l3_invert_status
    register_type: holding
    address: 0x44B2
    value_type: U_WORD
    accuracy_decimals: 0

# ===================================================================
# TEXT SENSOR: (СТРОКОВЫЕ)
# ===================================================================
text_sensor:
  # ------------------ Текущий действующий тариф (Тип TEXT_SENSOR) ------------------
  - platform: template
    name: "Текущий тариф"
    id: active_tariff
    update_interval: 10s # Проверка каждые 10 секунд
    icon: "mdi:clock-check-outline"
    entity_category: diagnostic
    lambda: |-
      // Вспомогательная функция для парсинга "HH:MM" -> HHMM
      auto parse_time = [](const std::string &s) -> int {
        int h = 0, m = 0;
        if (sscanf(s.c_str(), "%d:%d", &h, &m) == 2) return h * 100 + m;
        return -1;
      };

      // текущее время
      auto now = id(esptime).now();
      int now_hhmm = now.hour * 100 + now.minute;

      // количество тарифов (select хранит строку "1"/"2"/"3")
      int count = std::atoi(id(tariff_count).state.c_str());
      if (count <= 0) count = 1;

      if (count <= 1) {
        return std::string("T1 (День)");
      }

      if (count == 2) {
        int day_start = parse_time(id(t1_start).state);
        int night_start = parse_time(id(t2_start).state);
        if (day_start == -1 || night_start == -1) return std::string("T2 (Ночь) - Ошибка времени");

        if (day_start > night_start) {
          // переход через полночь
          if (now_hhmm >= day_start || now_hhmm < night_start) return std::string("T1 (День)");
          return std::string("T2 (Ночь)");
        } else {
          if (now_hhmm >= day_start && now_hhmm < night_start) return std::string("T1 (День)");
          return std::string("T2 (Ночь)");
        }
      }

      // count >= 3 -> три-зонная логика (T1, T2, T3, T4)
      {
        int night_start = parse_time(id(t2_start).state);
        int peak1_start = parse_time(id(t3_start).state);
        int halfpeak1_start = parse_time(id(t4_start).state);
        int peak2_start = parse_time(id(t5_start).state);
        int halfpeak2_start = parse_time(id(t6_start).state);

        if (night_start == -1 || peak1_start == -1 || halfpeak1_start == -1 || peak2_start == -1 || halfpeak2_start == -1)
          return std::string("T2 (Ночь) - Ошибка времени");

        if (now_hhmm >= peak1_start && now_hhmm < halfpeak1_start) return std::string("T3 (Пик)");
        if (now_hhmm >= halfpeak1_start && now_hhmm < peak2_start) return std::string("T4 (Полупик)");
        if (now_hhmm >= peak2_start && now_hhmm < halfpeak2_start) return std::string("T3 (Пик)");

        if (now_hhmm >= halfpeak2_start) {
          if (halfpeak2_start < night_start && now_hhmm < night_start) return std::string("T4 (Полупик)");
        }

        return std::string("T2 (Ночь)");
      }

  # ======================
  # TEXT_SENSORS (фаза как L1/L2/L3)
  # ======================
  - platform: template
    name: "Ch1 CT1 Phase (text)"
    lambda: |-
      if (id(ch1_ct1_phase).state == 1) return {"L1 (A)"};
      if (id(ch1_ct1_phase).state == 2) return {"L2 (B)"};
      if (id(ch1_ct1_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

  - platform: template
    name: "Ch1 CT2 Phase (text)"
    lambda: |-
      if (id(ch1_ct2_phase).state == 1) return {"L1 (A)"};
      if (id(ch1_ct2_phase).state == 2) return {"L2 (B)"};
      if (id(ch1_ct2_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

  - platform: template
    name: "Ch1 CT3 Phase (text)"
    lambda: |-
      if (id(ch1_ct3_phase).state == 1) return {"L1 (A)"};
      if (id(ch1_ct3_phase).state == 2) return {"L2 (B)"};
      if (id(ch1_ct3_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

  - platform: template
    name: "Ch2 CT1 Phase (text)"
    lambda: |-
      if (id(ch2_ct1_phase).state == 1) return {"L1 (A)"};
      if (id(ch2_ct1_phase).state == 2) return {"L2 (B)"};
      if (id(ch2_ct1_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

  - platform: template
    name: "Ch2 CT2 Phase (text)"
    lambda: |-
      if (id(ch2_ct2_phase).state == 1) return {"L1 (A)"};
      if (id(ch2_ct2_phase).state == 2) return {"L2 (B)"};
      if (id(ch2_ct2_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

  - platform: template
    name: "Ch2 CT3 Phase (text)"
    lambda: |-
      if (id(ch2_ct3_phase).state == 1) return {"L1 (A)"};
      if (id(ch2_ct3_phase).state == 2) return {"L2 (B)"};
      if (id(ch2_ct3_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

  - platform: template
    name: "Ch3 CT1 Phase (text)"
    lambda: |-
      if (id(ch3_ct1_phase).state == 1) return {"L1 (A)"};
      if (id(ch3_ct1_phase).state == 2) return {"L2 (B)"};
      if (id(ch3_ct1_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

  - platform: template
    name: "Ch3 CT2 Phase (text)"
    lambda: |-
      if (id(ch3_ct2_phase).state == 1) return {"L1 (A)"};
      if (id(ch3_ct2_phase).state == 2) return {"L2 (B)"};
      if (id(ch3_ct2_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

  - platform: template
    name: "Ch3 CT3 Phase (text)"
    lambda: |-
      if (id(ch3_ct3_phase).state == 1) return {"L1 (A)"};
      if (id(ch3_ct3_phase).state == 2) return {"L2 (B)"};
      if (id(ch3_ct3_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

  - platform: template
    name: "Ch4 CT1 Phase (text)"
    lambda: |-
      if (id(ch4_ct1_phase).state == 1) return {"L1 (A)"};
      if (id(ch4_ct1_phase).state == 2) return {"L2 (B)"};
      if (id(ch4_ct1_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

  - platform: template
    name: "Ch4 CT2 Phase (text)"
    lambda: |-
      if (id(ch4_ct2_phase).state == 1) return {"L1 (A)"};
      if (id(ch4_ct2_phase).state == 2) return {"L2 (B)"};
      if (id(ch4_ct2_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

  - platform: template
    name: "Ch4 CT3 Phase (text)"
    lambda: |-
      if (id(ch4_ct3_phase).state == 1) return {"L1 (A)"};
      if (id(ch4_ct3_phase).state == 2) return {"L2 (B)"};
      if (id(ch4_ct3_phase).state == 3) return {"L3 (C)"};
      return {"Unknown"};

# ===================================================================
# ВИРТУАЛЬНЫЕ УСТРОЙСТВА (тарифы)
# ===================================================================
select:
  - platform: template
    id: tariff_count
    name: "Количество тарифов"
    options: ["1", "2", "3"]
    initial_option: "2"
    restore_value: yes
    optimistic: true

text:
  - platform: template
    id: t1_start
    name: "Начало Дня (T1)"
    initial_value: "07:00"
    pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
    restore_value: yes
    mode: TEXT
    optimistic: true

  - platform: template
    id: t2_start
    name: "Начало Ночи (T2)"
    initial_value: "23:00"
    pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
    restore_value: yes
    mode: TEXT
    optimistic: true

  - platform: template
    id: t3_start
    name: "Начало Пик1 (T3)"
    initial_value: "07:00"
    pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
    restore_value: yes
    mode: TEXT
    optimistic: true

  - platform: template
    id: t4_start
    name: "Начало Полупик1 (T4)"
    initial_value: "10:00"
    pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
    restore_value: yes
    mode: TEXT
    optimistic: true

  - platform: template
    id: t5_start
    name: "Начало Пик2 (T3)"
    initial_value: "17:00"
    pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
    restore_value: yes
    mode: TEXT
    optimistic: true

  - platform: template
    id: t6_start
    name: "Начало Полупик2 (T4)"
    initial_value: "21:00"
    pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
    restore_value: yes
    mode: TEXT
    optimistic: true

# ===================================================================
# GLOBALS: last_total_energy и tariff_values (сохранение/восстановление)
# ===================================================================
globals:
  - id: last_total_energy
    type: float[4]
    restore_value: yes

  - id: tariff_values
    type: float[16]
    restore_value: yes

# ===================================================================
# Скрипт: обработка обновления total_energy
# ===================================================================
script:
  - id: process_energy_update
    parameters:
      channel_index: int
      total_energy: float
    then:
      - lambda: |-
          #include <cstdio>

          // Парсинг "HH:MM" -> HHMM
          auto parse_time = [](const std::string &s) -> int {
            int h = 0, m = 0;
            if (sscanf(s.c_str(), "%d:%d", &h, &m) == 2) {
              return h * 100 + m;
            }
            return -1;
          };

          // Определяем текущий тариф (0..3)
          auto get_current_tariff_index = [&]() -> int {
            auto now = id(esptime).now();
            int now_hhmm = now.hour * 100 + now.minute;
            int count = std::atoi(id(tariff_count).state.c_str());
            if (count <= 0) count = 1;

            if (count <= 1) return 0;

            if (count == 2) {
              int day_start = parse_time(id(t1_start).state);
              int night_start = parse_time(id(t2_start).state);
              if (day_start == -1 || night_start == -1) return 1;
              if (day_start > night_start) {
                return (now_hhmm >= day_start || now_hhmm < night_start) ? 0 : 1;
              } else {
                return (now_hhmm >= day_start && now_hhmm < night_start) ? 0 : 1;
              }
            }

            // count >= 3
            int night_start = parse_time(id(t2_start).state);
            int peak1_start = parse_time(id(t3_start).state);
            int halfpeak1_start = parse_time(id(t4_start).state);
            int peak2_start = parse_time(id(t5_start).state);
            int halfpeak2_start = parse_time(id(t6_start).state);
            if (night_start == -1 || peak1_start == -1 || halfpeak1_start == -1 || peak2_start == -1 || halfpeak2_start == -1) return 1;

            if (now_hhmm >= peak1_start && now_hhmm < halfpeak1_start) return 2;
            if (now_hhmm >= halfpeak1_start && now_hhmm < peak2_start) return 3;
            if (now_hhmm >= peak2_start && now_hhmm < halfpeak2_start) return 2;
            if (now_hhmm >= halfpeak2_start) {
              if (halfpeak2_start < night_start && now_hhmm < night_start) return 3;
            }
            return 1;
          };

          ESP_LOGD("powermeter", "Канал %d: новое значение total_energy = %.6f", channel_index + 1, total_energy);

          // Инициализация/сброс
          if (id(last_total_energy)[channel_index] == 0 || id(last_total_energy)[channel_index] > total_energy) {
            id(last_total_energy)[channel_index] = total_energy;
            ESP_LOGD("powermeter", "Канал %d: инициализация/сброс last_total_energy.", channel_index + 1);
            return;
          }

          float delta = total_energy - id(last_total_energy)[channel_index];

          if (delta < 0) {
            ESP_LOGW("powermeter", "Канал %d: Обнаружен сброс счётчика. delta < 0. Игнорируем.", channel_index + 1);
            id(last_total_energy)[channel_index] = total_energy;
            return;
          }
          if (delta > 100.0f) {
            ESP_LOGW("powermeter", "Канал %d: Слишком большой скачок. delta > 100. Игнорируем.", channel_index + 1);
            id(last_total_energy)[channel_index] = total_energy;
            return;
          }

          if (delta > 0.00001f) {
            int tariff_index = get_current_tariff_index();
            int sensor_array_index = channel_index * 4 + tariff_index;

            // Берём текущее накопление из globals и обновляем
            float current = id(tariff_values)[sensor_array_index];
            float new_value = current + delta;

            id(tariff_values)[sensor_array_index] = new_value;

            // Публикуем в соответствующий template sensor напрямую
            switch (sensor_array_index) {
              case 0: id(ch1_t1_day).publish_state(new_value); break;
              case 1: id(ch1_t2_night).publish_state(new_value); break;
              case 2: id(ch1_t3_peak).publish_state(new_value); break;
              case 3: id(ch1_t4_halfpeak).publish_state(new_value); break;

              case 4: id(ch2_t1_day).publish_state(new_value); break;
              case 5: id(ch2_t2_night).publish_state(new_value); break;
              case 6: id(ch2_t3_peak).publish_state(new_value); break;
              case 7: id(ch2_t4_halfpeak).publish_state(new_value); break;

              case 8: id(ch3_t1_day).publish_state(new_value); break;
              case 9: id(ch3_t2_night).publish_state(new_value); break;
              case 10: id(ch3_t3_peak).publish_state(new_value); break;
              case 11: id(ch3_t4_halfpeak).publish_state(new_value); break;

              case 12: id(ch4_t1_day).publish_state(new_value); break;
              case 13: id(ch4_t2_night).publish_state(new_value); break;
              case 14: id(ch4_t3_peak).publish_state(new_value); break;
              case 15: id(ch4_t4_halfpeak).publish_state(new_value); break;

              default:
                ESP_LOGW("powermeter", "Неверный индекс сенсора: %d", sensor_array_index);
                break;
            }

            ESP_LOGI("powermeter", "Канал %d: Тариф %d: добавлено %.6f, новое: %.6f",
              channel_index + 1, tariff_index + 1, delta, new_value);
          }

          id(last_total_energy)[channel_index] = total_energy;

# ======================
# NUMBER (writeable holding registers)
# ======================
number:
  # Channel 1 writeable params
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch1 CT Ratio L1"
    id: set_ch1_ct_ratio_l1
    register_type: holding
    address: 0x1460
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch1 CT Ratio L2"
    id: set_ch1_ct_ratio_l2
    register_type: holding
    address: 0x1461
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch1 CT Ratio L3"
    id: set_ch1_ct_ratio_l3
    register_type: holding
    address: 0x1462
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch1 CT Phase Delay L1"
    id: set_ch1_phase_delay_l1
    register_type: holding
    address: 0x1463
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch1 CT Phase Delay L2"
    id: set_ch1_phase_delay_l2
    register_type: holding
    address: 0x1464
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch1 CT Phase Delay L3"
    id: set_ch1_phase_delay_l3
    register_type: holding
    address: 0x1465
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch1 CT1 Phase Select"
    id: set_ch1_ct1_phase
    register_type: holding
    address: 0x14A0
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch1 CT2 Phase Select"
    id: set_ch1_ct2_phase
    register_type: holding
    address: 0x14A1
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch1 CT3 Phase Select"
    id: set_ch1_ct3_phase
    register_type: holding
    address: 0x14A2
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

  # Channel 2 writeable params
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch2 CT Ratio L1"
    id: set_ch2_ct_ratio_l1
    register_type: holding
    address: 0x2460
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch2 CT Ratio L2"
    id: set_ch2_ct_ratio_l2
    register_type: holding
    address: 0x2461
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch2 CT Ratio L3"
    id: set_ch2_ct_ratio_l3
    register_type: holding
    address: 0x2462
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch2 CT Phase Delay L1"
    id: set_ch2_phase_delay_l1
    register_type: holding
    address: 0x2463
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch2 CT Phase Delay L2"
    id: set_ch2_phase_delay_l2
    register_type: holding
    address: 0x2464
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch2 CT Phase Delay L3"
    id: set_ch2_phase_delay_l3
    register_type: holding
    address: 0x2465
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch2 CT1 Phase Select"
    id: set_ch2_ct1_phase
    register_type: holding
    address: 0x24A0
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch2 CT2 Phase Select"
    id: set_ch2_ct2_phase
    register_type: holding
    address: 0x24A1
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch2 CT3 Phase Select"
    id: set_ch2_ct3_phase
    register_type: holding
    address: 0x24A2
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

  # Channel 3 writeable params
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch3 CT Ratio L1"
    id: set_ch3_ct_ratio_l1
    register_type: holding
    address: 0x3460
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch3 CT Ratio L2"
    id: set_ch3_ct_ratio_l2
    register_type: holding
    address: 0x3461
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch3 CT Ratio L3"
    id: set_ch3_ct_ratio_l3
    register_type: holding
    address: 0x3462
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch3 CT Phase Delay L1"
    id: set_ch3_phase_delay_l1
    register_type: holding
    address: 0x3463
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch3 CT Phase Delay L2"
    id: set_ch3_phase_delay_l2
    register_type: holding
    address: 0x3464
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch3 CT Phase Delay L3"
    id: set_ch3_phase_delay_l3
    register_type: holding
    address: 0x3465
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch3 CT1 Phase Select"
    id: set_ch3_ct1_phase
    register_type: holding
    address: 0x34A0
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch3 CT2 Phase Select"
    id: set_ch3_ct2_phase
    register_type: holding
    address: 0x34A1
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch3 CT3 Phase Select"
    id: set_ch3_ct3_phase
    register_type: holding
    address: 0x34A2
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

  # Channel 4 writeable params
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch4 CT Ratio L1"
    id: set_ch4_ct_ratio_l1
    register_type: holding
    address: 0x4460
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch4 CT Ratio L2"
    id: set_ch4_ct_ratio_l2
    register_type: holding
    address: 0x4461
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch4 CT Ratio L3"
    id: set_ch4_ct_ratio_l3
    register_type: holding
    address: 0x4462
    value_type: U_WORD
    min_value: 0
    max_value: 65535
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch4 CT Phase Delay L1"
    id: set_ch4_phase_delay_l1
    register_type: holding
    address: 0x4463
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch4 CT Phase Delay L2"
    id: set_ch4_phase_delay_l2
    register_type: holding
    address: 0x4464
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch4 CT Phase Delay L3"
    id: set_ch4_phase_delay_l3
    register_type: holding
    address: 0x4465
    value_type: S_WORD
    min_value: -32768
    max_value: 32767
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch4 CT1 Phase Select"
    id: set_ch4_ct1_phase
    register_type: holding
    address: 0x44A0
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch4 CT2 Phase Select"
    id: set_ch4_ct2_phase
    register_type: holding
    address: 0x44A1
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Set Ch4 CT3 Phase Select"
    id: set_ch4_ct3_phase
    register_type: holding
    address: 0x44A2
    value_type: U_WORD
    min_value: 1
    max_value: 3
    step: 1

# ======================
# SWITCHES (инверсия CT) - запись битов в holding (0/1)
# ======================
switch:
  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT L1 Invert"
    register_type: holding
    address: 0x14B0
    bitmask: 0x0001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT L2 Invert"
    register_type: holding
    address: 0x14B1
    bitmask: 0x0001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch1 CT L3 Invert"
    register_type: holding
    address: 0x14B2
    bitmask: 0x0001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT L1 Invert"
    register_type: holding
    address: 0x24B0
    bitmask: 0x0001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT L2 Invert"
    register_type: holding
    address: 0x24B1
    bitmask: 0x0001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch2 CT L3 Invert"
    register_type: holding
    address: 0x24B2
    bitmask: 0x0001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT L1 Invert"
    register_type: holding
    address: 0x34B0
    bitmask: 0x0001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT L2 Invert"
    register_type: holding
    address: 0x34B1
    bitmask: 0x0001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch3 CT L3 Invert"
    register_type: holding
    address: 0x34B2
    bitmask: 0x0001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT L1 Invert"
    register_type: holding
    address: 0x44B0
    bitmask: 0x0001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT L2 Invert"
    register_type: holding
    address: 0x44B1
    bitmask: 0x0001

  - platform: modbus_controller
    modbus_controller_id: map_device
    name: "Ch4 CT L3 Invert"
    register_type: holding
    address: 0x44B2
    bitmask: 0x0001
