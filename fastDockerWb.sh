#!/bin/bash
set -e

LOG()  { echo -e "\e[1;32m[INFO]\e[0m $*"; }
WARN() { echo -e "\e[1;33m[WARN]\e[0m $*"; }
ERR()  { echo -e "\e[1;31m[ERROR]\e[0m $*" >&2; exit 1; }

if [[ $EUID -ne 0 ]]; then
    ERR "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ root –∏–ª–∏ —á–µ—Ä–µ–∑ sudo."
fi

if command -v docker &> /dev/null; then
    LOG "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞—é —à–∞–≥–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏."
else
    LOG "–®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    apt-get update -y
    apt-get install -y ca-certificates curl gnupg lsb-release iptables apt-transport-https rsync --no-install-recommends

    LOG "–®–∞–≥ 2: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ iptables –≤ —Ä–µ–∂–∏–º legacy –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏..."
    update-alternatives --set iptables /usr/sbin/iptables-legacy || true
    update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy || true

    LOG "–®–∞–≥ 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ GPG –∫–ª—é—á–∞ –∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker..."
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
    chmod a+r /etc/apt/keyrings/docker.asc

    ARCH=$(dpkg --print-architecture)
    CODENAME=$(lsb_release -cs)
    echo "deb [arch=$ARCH signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $CODENAME stable" > /etc/apt/sources.list.d/docker.list

    LOG "–®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Engine..."
    apt-get update -y
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin --no-install-recommends
fi

LOG "–®–∞–≥ 5: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä –¥–∏—Å–∫–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö Docker."

# –°–æ–±–∏—Ä–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ç–æ—á–∫–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Å–≤–æ–±–æ–¥–Ω–æ >1G, –∏—Å–∫–ª—é—á–∞—è /boot)
mapfile -t raw_opts < <(df -B1 | awk 'NR>1 && $4 > 1073741824 && $6 !~ "^/boot" {printf "%s (%0.1fG free)\n", $6, $4/1073741824}' | sort -k2 -hr)

# –≤—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏—é "–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
raw_opts+=("/var/lib/docker (–û—Å—Ç–∞–≤–∏—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")

# –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ —Ä–µ–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ (–∏–ª–∏ none), —É–≤–µ–¥–æ–º–ª—è–µ–º
if [ ${#raw_opts[@]} -le 1 ]; then
    WARN "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –¥—Ä—É–≥–∏—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤. –î–∞–Ω–Ω—ã–µ Docker –æ—Å—Ç–∞–Ω—É—Ç—Å—è –≤ /var/lib/docker."
    DOCKER_PATH="/var/lib/docker"
else
    echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ, –∫—É–¥–∞ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ Docker:"
    for i in "${!raw_opts[@]}"; do
        idx=$((i+1))
        echo " $idx) ${raw_opts[i]}"
    done

    # –ï—Å–ª–∏ –∑–∞–¥–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è DOCKER_DATA_CHOICE ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë (—É–¥–æ–±–Ω–æ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏)
    if [[ -n "${DOCKER_DATA_CHOICE:-}" ]]; then
        CHOICE="${DOCKER_DATA_CHOICE}"
        LOG "–ò—Å–ø–æ–ª—å–∑—É—é DOCKER_DATA_CHOICE=${CHOICE}"
    else
        # —á–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç –ø—Ä—è–º–æ –∏–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞, –¥–∞–∂–µ –µ—Å–ª–∏ stdin –∑–∞–Ω—è—Ç (curl | bash)
        if [[ -e /dev/tty && -c /dev/tty ]]; then
            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –≤–≤–µ–¥—ë–Ω –≤–∞–ª–∏–¥–Ω—ã–π –Ω–æ–º–µ—Ä
            while true; do
                read -rp "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: " CHOICE < /dev/tty || CHOICE=""
                # –µ—Å–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å (–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî –ø–µ—Ä–≤–∞—è –æ–ø—Ü–∏—è)
                if [[ -z "$CHOICE" ]]; then
                    WARN "–ü—É—Å—Ç–æ–π –≤–≤–æ–¥ ‚Äî –≤—ã–±–∏—Ä–∞—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–ø—É–Ω–∫—Ç 1)."
                    CHOICE=1
                    break
                fi
                if [[ "$CHOICE" =~ ^[0-9]+$ ]] && [ "$CHOICE" -ge 1 ] && [ "$CHOICE" -le "${#raw_opts[@]}" ]; then
                    break
                fi
                echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            done
        else
            # –Ω–µ—Ç tty ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä: –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π (—Å–∞–º—ã–π –±–æ–ª—å—à–æ–π) —Ä–∞–∑–¥–µ–ª
            LOG "/dev/tty –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –ø—É–Ω–∫—Ç–∞ 1."
            CHOICE=1
        fi
    fi

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–ø—Ü–∏–∏
    sel_index=$((CHOICE-1))
    sel_opt="${raw_opts[$sel_index]}"

    if [[ "$sel_opt" =~ "/var/lib/docker" ]]; then
        DOCKER_PATH="/var/lib/docker"
    else
        # —É–±–∏—Ä–∞–µ–º —á–∞—Å—Ç—å " (NNNG free)" –∏ –¥–æ–±–∞–≤–ª—è–µ–º /docker
        MOUNT_POINT=$(echo "$sel_opt" | sed -E 's/ \([0-9.]+G free\)//; s/ \(–û—Å—Ç–∞–≤–∏—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\)//')
        DOCKER_PATH="${MOUNT_POINT%/}/docker"
    fi
fi

# –£–∑–Ω–∞—ë–º —Ç–µ–∫—É—â—É—é docker root dir (–µ—Å–ª–∏ docker —Ä–∞–±–æ—Ç–∞–µ—Ç)
CURRENT_DOCKER_PATH=$(docker info -f '{{.DockerRootDir}}' 2>/dev/null || echo "/var/lib/docker")

if [[ "$DOCKER_PATH" == "$CURRENT_DOCKER_PATH" ]]; then
    LOG "–í—ã–±—Ä–∞–Ω —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å ($DOCKER_PATH). –ù–∏–∫–∞–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è."
    LOG "üéâ Docker –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
    exit 0
fi

LOG "–®–∞–≥ 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –∏ –ø–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –≤ '$DOCKER_PATH'..."

mkdir -p "$(dirname "$DOCKER_PATH")"
mkdir -p /etc/docker
cat <<EOF > /etc/docker/daemon.json
{
  "data-root": "$DOCKER_PATH"
}
EOF

LOG "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–ª—É–∂–±—É Docker –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–µ—Ä–µ–Ω–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö..."
systemctl stop docker || true

LOG "–°–æ–∑–¥–∞—é —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –ø–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ '$CURRENT_DOCKER_PATH' –≤ '$DOCKER_PATH'..."
mkdir -p "$DOCKER_PATH"
rsync -a --info=progress2 "$CURRENT_DOCKER_PATH/" "$DOCKER_PATH/"

LOG "–ó–∞–ø—É—Å–∫–∞—é —Å–ª—É–∂–±—É Docker —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
systemctl start docker

LOG "–®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö Docker..."
sleep 3
NEW_DOCKER_PATH=$(docker info -f '{{.DockerRootDir}}' 2>/dev/null || echo "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è docker info")

if [[ "$NEW_DOCKER_PATH" == "$DOCKER_PATH" ]]; then
    LOG "üéâ –£—Å–ø–µ—Ö! –î–∞–Ω–Ω—ã–µ Docker —Ç–µ–ø–µ—Ä—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤: $NEW_DOCKER_PATH"
    LOG "–°—Ç–∞—Ä—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é '$CURRENT_DOCKER_PATH' –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤—Ä—É—á–Ω—É—é –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏."
else
    ERR "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–æ–≤–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: $NEW_DOCKER_PATH, –æ–∂–∏–¥–∞–ª–æ—Å—å: $DOCKER_PATH"
fi

LOG "–ì–æ—Ç–æ–≤–æ. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å docker –∏ docker compose."
