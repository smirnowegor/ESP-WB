#!/bin/bash
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º: —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ—Ä–≤–µ—Ç—Å—è –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ.
set -e

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ ---
LOG() { echo -e "\e[1;32m[INFO]\e[0m $*"; }
WARN() { echo -e "\e[1;33m[WARN]\e[0m $*"; }
ERR() { echo -e "\e[1;31m[ERROR]\e[0m $*" >&2; exit 1; }

# --- –ù–∞—á–∞–ª–æ —Å–∫—Ä–∏–ø—Ç–∞ ---

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (root)
if [[ $EUID -ne 0 ]]; then
   ERR "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ root –∏–ª–∏ —á–µ—Ä–µ–∑ sudo."
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ Docker
if command -v docker &> /dev/null; then
    LOG "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞—é —à–∞–≥–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏."
else
    LOG "–®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    apt-get update -y
    apt-get install -y ca-certificates curl gnupg lsb-release iptables apt-transport-https --no-install-recommends

    LOG "–®–∞–≥ 2: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ iptables –≤ —Ä–µ–∂–∏–º legacy –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏..."
    update-alternatives --set iptables /usr/sbin/iptables-legacy
    update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy

    LOG "–®–∞–≥ 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ GPG –∫–ª—é—á–∞ –∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker..."
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
    chmod a+r /etc/apt/keyrings/docker.asc
    
    ARCH=$(dpkg --print-architecture)
    CODENAME=$(lsb_release -cs)
    
    echo "deb [arch=$ARCH signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $CODENAME stable" > /etc/apt/sources.list.d/docker.list

    LOG "–®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Engine..."
    apt-get update -y
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin --no-install-recommends
fi

# --- –ù–û–í–´–ï –®–ê–ì–ò ---

LOG "–®–∞–≥ 5: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä –¥–∏—Å–∫–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö Docker."

# –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–∞–∑–¥–µ–ª—ã (—Ä–∞–∑–º–µ—Ä –±–æ–ª—å—à–µ 1–ì–ë, –Ω–µ / –∏ –Ω–µ /boot)
# IFS - —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å, read -r - –Ω–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—ã–µ —Å–ª–µ—à–∏, -a - –∑–∞–ø–∏—Å–∞—Ç—å –≤ –º–∞—Å—Å–∏–≤
# df –≤—ã–≤–æ–¥–∏—Ç –≤ –±–∞–π—Ç–∞—Ö, awk —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç, sort —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–æ —Ä–∞–∑–º–µ—Ä—É
mapfile -t options < <(df -B1 | awk 'NR>1 && $4 > 1073741824 && $6 !~ "^/boot" && $6 ~ "^/" {printf "%s (%s free)\n", $6, substr($4/1073741824, 1, 4)"G"}' | sort -k2 -hr)

# –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏—é "–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
options+=("–û—Å—Ç–∞–≤–∏—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ /var/lib/docker")

if [ ${#options[@]} -eq 1 ]; then
    WARN "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –¥—Ä—É–≥–∏—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤. –î–∞–Ω–Ω—ã–µ Docker –æ—Å—Ç–∞–Ω—É—Ç—Å—è –≤ /var/lib/docker."
    DOCKER_PATH="/var/lib/docker"
else
    echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ, –∫—É–¥–∞ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ Docker:"
    PS3="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: "
    select opt in "${options[@]}"; do
        if [[ -n "$opt" ]]; then
            if [[ "$opt" == "–û—Å—Ç–∞–≤–∏—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ /var/lib/docker" ]]; then
                DOCKER_PATH="/var/lib/docker"
                break
            else
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—É—Ç—å –∏–∑ —Å—Ç—Ä–æ–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ "/mnt/data (52G free)" –ø–æ–ª—É—á–∞–µ–º "/mnt/data"
                CHOSEN_MOUNT=$(echo "$opt" | awk '{print $1}')
                DOCKER_PATH="${CHOSEN_MOUNT}/docker"
                break
            fi
        else
            echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        fi
    done
fi

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å –∫ –¥–∞–Ω–Ω—ã–º Docker
CURRENT_DOCKER_PATH=$(docker info -f '{{.DockerRootDir}}')

if [[ "$DOCKER_PATH" == "$CURRENT_DOCKER_PATH" ]]; then
    LOG "–í—ã–±—Ä–∞–Ω —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å. –ù–∏–∫–∞–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è."
    LOG "üéâ Docker –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
    exit 0
fi

LOG "–®–∞–≥ 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –∏ –ø–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –≤ '$DOCKER_PATH'..."

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–µ–º–æ–Ω–∞
mkdir -p /etc/docker
cat <<EOF > /etc/docker/daemon.json
{
  "data-root": "$DOCKER_PATH"
}
EOF

LOG "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–ª—É–∂–±—É Docker –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–µ—Ä–µ–Ω–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö..."
systemctl stop docker

LOG "–ü–µ—Ä–µ–Ω–æ—à—É –¥–∞–Ω–Ω—ã–µ –∏–∑ '$CURRENT_DOCKER_PATH' –≤ '$DOCKER_PATH' (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)..."
# –ò—Å–ø–æ–ª—å–∑—É–µ–º rsync –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤ –∏ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
rsync -a -q "$CURRENT_DOCKER_PATH/" "$DOCKER_PATH"

LOG "–ó–∞–ø—É—Å–∫–∞—é —Å–ª—É–∂–±—É Docker —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
systemctl start docker

LOG "–®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö Docker..."
sleep 5 # –î–∞–µ–º –¥–µ–º–æ–Ω—É –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
NEW_DOCKER_PATH=$(docker info -f '{{.DockerRootDir}}')

if [[ "$NEW_DOCKER_PATH" == "$DOCKER_PATH" ]]; then
    LOG "üéâ –£—Å–ø–µ—Ö! –î–∞–Ω–Ω—ã–µ Docker —Ç–µ–ø–µ—Ä—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤: $NEW_DOCKER_PATH"
    LOG "–°—Ç–∞—Ä—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é '$CURRENT_DOCKER_PATH' –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏."
else
    ERR "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–æ–≤–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: $NEW_DOCKER_PATH, –æ–∂–∏–¥–∞–ª–æ—Å—å: $DOCKER_PATH"
fi

LOG "–ì–æ—Ç–æ–≤–æ. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å docker –∏ docker compose."
